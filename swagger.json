{
  "openapi": "3.0.0",
  "info": {
    "title": "Kapusta API documentation",
    "description": " Team EASY-CODE",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:4040/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Authorization and information endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    }
  ],
  "paths": {
    "/auth/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/auth/users/google/login": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login user with google",
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user`s infirmation",
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/auth/users/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User logout",
        "responses": {
          "200": {
            "description": "Logout success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/auth/users/balance": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user`s balance",
        "requestBody": {
          "description": "New user`s balance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "balanse"
                ],
                "properties": {
                  "balanse": {
                    "type": "number",
                    "example": 1234
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newBalanseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/income": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add user`s income",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newIncome": {
                    "type": "number",
                    "description": "user`s balance",
                    "example": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/incomeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      },
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get total income",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/incomeTotalResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/expense": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add user`s expense",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newExpense": {
                    "type": "number",
                    "description": "user`s balance",
                    "example": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/expenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      },
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get total expense",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/expenseTotalResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/{id}": {
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Delete user`s transaction",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "transaction`s id",
            "in": "path",
            "schema": {
              "type": "string",
              "example": "639ef3d3a1ba6adb9a40406d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newBalance": {
                      "type": "number",
                      "description": "user`s balance",
                      "example": 10000
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/income-categories": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add user`s expense",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/expenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/expense-categories": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add user`s expense",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/expenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    },
    "/transaction/period-data": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Add user`s expense",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/expenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validate error)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invalid user"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "registrationRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "user's email",
            "example": "mysite@ourearth.com"
          },
          "password": {
            "type": "string",
            "description": "user's password",
            "example": "qaz12345",
            "minimum": 6
          }
        }
      },
      "registrationResponse": {
        "type": "object",
        "required": [
          "email",
          "id"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "user's email",
            "example": "mysite@ourearth.com"
          },
          "id": {
            "type": "string",
            "description": "user's id",
            "example": "63a558d49aa31804e5d84653"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "user's token. Used to send requests",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYTU1OGQ0OWFhMzE4MDRlNWQ4NDY1MyIsImlhdCI6MTY3MTg3NzcxMiwiZXhwIjoxNjcxOTYwNTEyfQ.OpIkVGeVgdY6FtpQ8EZFvj38PXr75IEt3Fl_sDM3diw"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "user's email",
                "example": "mysite@ourearth.com"
              },
              "id": {
                "type": "string",
                "description": "user's id",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      },
      "newBalanseResponse": {
        "type": "object",
        "required": [
          "email",
          "balance"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "user's email",
            "example": "mysite@ourearth.com"
          },
          "balance": {
            "type": "number",
            "description": "changed user's balance",
            "example": 1987
          }
        }
      },
      "currentUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "user`s email",
            "example": "mysite@ourearth.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "url of user`s avatar",
            "example": "www.gravatar.com/avatar/9212ef94c1a3e24e27078e66d355cbc3"
          },
          "balance": {
            "type": "number",
            "description": "user`s balance",
            "example": 5000
          },
          "transaction": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "???",
                "example": "income"
              },
              "owner": {
                "type": "string",
                "description": "owner of operation",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      },
      "incomeResponse": {
        "type": "object",
        "properties": {
          "newBalance": {
            "type": "number",
            "description": "user`s balance",
            "example": 10000
          },
          "transaction": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "???",
                "example": "income"
              },
              "owner": {
                "type": "string",
                "description": "owner of operation",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      },
      "incomeTotalResponse": {
        "type": "object",
        "properties": {
          "newBalance": {
            "type": "number",
            "description": "user`s balance",
            "example": 10000
          },
          "transaction": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "???",
                "example": "income"
              },
              "owner": {
                "type": "string",
                "description": "owner of operation",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      },
      "expenseResponse": {
        "type": "object",
        "properties": {
          "newBalance": {
            "type": "number",
            "description": "user`s balance",
            "example": 10000
          },
          "transaction": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "???",
                "example": "income"
              },
              "owner": {
                "type": "string",
                "description": "owner of operation",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      },
      "expenseTotalResponse": {
        "type": "object",
        "properties": {
          "newBalance": {
            "type": "number",
            "description": "user`s balance",
            "example": 10000
          },
          "transaction": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "???",
                "example": "income"
              },
              "owner": {
                "type": "string",
                "description": "owner of operation",
                "example": "63a558d49aa31804e5d84653"
              }
            }
          }
        }
      }
    }
  }
}